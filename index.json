[{"content":"Loki is a datastore optimized for efficiently holding log data.\nThe efficient indexing of log data distinguishes Loki from other logging systems. Unlike other logging systems, a Loki index is built from labels, leaving the original log message unindexed.\nThe Basic native tool to send data to Loki, is Promtail\nA sample config file for Loki might seen like the follows:\nserver: http_listen_port: 0 grpc_listen_port: 0 positions: filename: /tmp/positions.yaml clients: - url: https://your.loki.cluster scrape_configs: - job_name: system static_configs: - targets: - localhost labels: job: varlogs __path__: /var/log/*.log - targets: - localhost labels: job: syslog __path__: /var/log/syslog ","permalink":"https://omers.github.io/docs/monitoring/loki/","summary":"Loki is a datastore optimized for efficiently holding log data.\nThe efficient indexing of log data distinguishes Loki from other logging systems. Unlike other logging systems, a Loki index is built from labels, leaving the original log message unindexed.\nThe Basic native tool to send data to Loki, is Promtail\nA sample config file for Loki might seen like the follows:\nserver: http_listen_port: 0 grpc_listen_port: 0 positions: filename: /tmp/positions.yaml clients: - url: https://your.","title":"Loki Log based metrics a.k.a logs2metrics"},{"content":"Quantiles from histograms 90th percentile request latency over last 5 minutes, for every label dimension:\nhistogram_quantile(0.9, rate(api_duration_seconds_bucket[5m])) Rates of increase for counters Per-second rate of increase, averaged over last 5 minutes: rate(demo_api_request_duration_seconds_count[5m]) Per-second rate of increase, calculated over last two samples in a 1-minute time window irate(demo_api_request_duration_seconds_count[1m]) Absolute increase over last hour: increase(demo_api_request_duration_seconds_count[1h]) Aggregating over time Average within each series over a 5-minute period avg_over_time(go_goroutines[5m]) Get the maximum for each series over a one-day period max_over_time(process_resident_memory_bytes[1d]) Count the number of samples for each series over a 5-minute period count_over_time(process_resident_memory_bytes[5m]) ","permalink":"https://omers.github.io/cheatsheet/prometheus/common-queries/","summary":"Quantiles from histograms 90th percentile request latency over last 5 minutes, for every label dimension:\nhistogram_quantile(0.9, rate(api_duration_seconds_bucket[5m])) Rates of increase for counters Per-second rate of increase, averaged over last 5 minutes: rate(demo_api_request_duration_seconds_count[5m]) Per-second rate of increase, calculated over last two samples in a 1-minute time window irate(demo_api_request_duration_seconds_count[1m]) Absolute increase over last hour: increase(demo_api_request_duration_seconds_count[1h]) Aggregating over time Average within each series over a 5-minute period avg_over_time(go_goroutines[5m]) Get the maximum for each series over a one-day period max_over_time(process_resident_memory_bytes[1d]) Count the number of samples for each series over a 5-minute period count_over_time(process_resident_memory_bytes[5m]) ","title":"Prometheus Common Queries"},{"content":"YOLOv5 ðŸš€ is a family of object detection architectures and models pretrained on the COCO dataset, and represents Ultralytics open-source research into future vision AI methods, incorporating lessons learned and best practices evolved over thousands of hours of research and development.\nThe project source code can be found Here\n","permalink":"https://omers.github.io/docs/ai/yolov/","summary":"YOLOv5 ðŸš€ is a family of object detection architectures and models pretrained on the COCO dataset, and represents Ultralytics open-source research into future vision AI methods, incorporating lessons learned and best practices evolved over thousands of hours of research and development.\nThe project source code can be found Here","title":"YOLO â€” You only look once"},{"content":"Natural language processing (NLP) is a field that focuses on making natural human language usable by computer programs. NLTK, or Natural Language Toolkit, is a Python package that you can use for NLP.\nA lot of the data that you could be analyzing is unstructured data and contains human-readable text. Before you can analyze that data programmatically, you first need to preprocess it. In this tutorial, youâ€™ll take your first look at the kinds of text preprocessing tasks you can do with NLTK so that youâ€™ll be ready to apply them in future projects. Youâ€™ll also see how to do some basic text analysis and create visualizations.\nIf youâ€™re familiar with the basics of using Python and would like to get your feet wet with some NLP, then youâ€™ve come to the right place.\nBy the end of this tutorial, youâ€™ll know how to:\nFind text to analyze Preprocess your text for analysis Analyze your text Create visualizations based on your analysis Letâ€™s get Pythoning! ","permalink":"https://omers.github.io/docs/ai/python-nlp-libraries/","summary":"Natural language processing (NLP) is a field that focuses on making natural human language usable by computer programs. NLTK, or Natural Language Toolkit, is a Python package that you can use for NLP.\nA lot of the data that you could be analyzing is unstructured data and contains human-readable text. Before you can analyze that data programmatically, you first need to preprocess it. In this tutorial, youâ€™ll take your first look at the kinds of text preprocessing tasks you can do with NLTK so that youâ€™ll be ready to apply them in future projects.","title":"Python Nlp Libraries"},{"content":"Scikit-learn is an open source machine learning library that supports supervised and unsupervised learning. It also provides various tools for model fitting, data preprocessing, model selection, model evaluation, and many other utilities.\n","permalink":"https://omers.github.io/docs/ai/slearn/","summary":"Scikit-learn is an open source machine learning library that supports supervised and unsupervised learning. It also provides various tools for model fitting, data preprocessing, model selection, model evaluation, and many other utilities.","title":"Python Scikit Learn"},{"content":"Scikit-learn is an open source machine learning library that supports supervised and unsupervised learning. It also provides various tools for model fitting, data preprocessing, model selection, model evaluation, and many other utilities.\n","permalink":"https://omers.github.io/docs/ai/a-slearn/","summary":"Scikit-learn is an open source machine learning library that supports supervised and unsupervised learning. It also provides various tools for model fitting, data preprocessing, model selection, model evaluation, and many other utilities.","title":"My 1st post"}]