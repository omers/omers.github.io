<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>monitoring on OpsWise</title><link>https://omers.github.io/tags/monitoring/</link><description>Recent content in monitoring on OpsWise</description><image><title>OpsWise</title><url>https://omers.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url><link>https://omers.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link></image><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 03 May 2023 19:42:18 +0300</lastBuildDate><atom:link href="https://omers.github.io/tags/monitoring/index.xml" rel="self" type="application/rss+xml"/><item><title>Building Loki Cluster With Terraform</title><link>https://omers.github.io/docs/monitoring/building-loki-cluster-with-terraform/</link><pubDate>Wed, 03 May 2023 19:42:18 +0300</pubDate><guid>https://omers.github.io/docs/monitoring/building-loki-cluster-with-terraform/</guid><description>The Idea Elasticsearch and Grafana Loki are both log management systems, but they have different strengths and weaknesses. Here are some reasons why you might want to consider migrating from Elasticsearch to Grafana Loki:
Cost: Elasticsearch can be expensive, especially for larger deployments. Grafana Loki, on the other hand, is open source and free to use.
Simplicity: Grafana Loki is designed to be simple and easy to use, with a focus on searching and visualizing logs.</description></item><item><title>Cloudquery</title><link>https://omers.github.io/docs/monitoring/cloudquery/</link><pubDate>Tue, 26 Jul 2022 16:37:30 +0300</pubDate><guid>https://omers.github.io/docs/monitoring/cloudquery/</guid><description/></item><item><title>Loki Log based metrics a.k.a logs2metrics</title><link>https://omers.github.io/docs/monitoring/loki/</link><pubDate>Sat, 23 Jul 2022 19:09:12 +0300</pubDate><guid>https://omers.github.io/docs/monitoring/loki/</guid><description>Loki is a datastore optimized for efficiently holding log data.
The efficient indexing of log data distinguishes Loki from other logging systems. Unlike other logging systems, a Loki index is built from labels, leaving the original log message unindexed.
The Basic native tool to send data to Loki, is Promtail
A sample config file for Loki might seen like the follows:
server: http_listen_port: 0 grpc_listen_port: 0 positions: filename: /tmp/positions.yaml clients: - url: https://your.</description></item><item><title>Prometheus Common Queries</title><link>https://omers.github.io/docs/monitoring/prometheus/common-queries/</link><pubDate>Sat, 23 Jul 2022 09:15:49 +0300</pubDate><guid>https://omers.github.io/docs/monitoring/prometheus/common-queries/</guid><description>Quantiles from histograms 90th percentile request latency over last 5 minutes, for every label dimension:
histogram_quantile(0.9, rate(api_duration_seconds_bucket[5m])) Rates of increase for counters Per-second rate of increase, averaged over last 5 minutes: rate(demo_api_request_duration_seconds_count[5m]) Per-second rate of increase, calculated over last two samples in a 1-minute time window irate(demo_api_request_duration_seconds_count[1m]) Absolute increase over last hour: increase(demo_api_request_duration_seconds_count[1h]) Aggregating over time Average within each series over a 5-minute period avg_over_time(go_goroutines[5m]) Get the maximum for each series over a one-day period max_over_time(process_resident_memory_bytes[1d]) Count the number of samples for each series over a 5-minute period count_over_time(process_resident_memory_bytes[5m])</description></item></channel></rss>